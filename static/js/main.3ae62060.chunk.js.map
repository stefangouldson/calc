{"version":3,"sources":["App.js","logo.svg","serviceWorker.js","index.js"],"names":["ans","App","state","sum","OneHandler","total","setState","TwoHandler","ThreeHandler","FourHandler","FiveHandler","SixHandler","SevenHandler","EightHandler","NineHandler","ZeroHandler","ClearHandler","HandlerAdd","push","HandlerSub","HandlerMul","HandlerDiv","EqualHandler","eval","join","id","this","className","onClick","React","Component","module","exports","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ae62060.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nlet ans=[]\n\nclass App extends React.Component {\n  state = {\n    sum: \"\"\n  };\n\n\n  OneHandler=()=>{\n    let total=this.state.sum;\n    this.setState({sum:total+=\"1\"});\n  }\n\n  TwoHandler=()=>{\n    let total=this.state.sum;\n    this.setState({sum:total+=\"2\"});\n  }\n\n  ThreeHandler=()=>{\n    let total=this.state.sum;\n    this.setState({sum:total+=\"3\"});\n  }\n\n  FourHandler=()=>{\n    let total=this.state.sum;\n    this.setState({sum:total+=\"4\"});\n  }\n\n  FiveHandler=()=>{\n    let total=this.state.sum;\n    this.setState({sum:total+=\"5\"});\n  }\n\n  SixHandler=()=>{\n    let total=this.state.sum;\n    this.setState({sum:total+=\"6\"});\n  }\n\n  SevenHandler=()=>{\n    let total=this.state.sum;\n    this.setState({sum:total+=\"7\"});\n  }\n\n  EightHandler=()=>{\n    let total=this.state.sum;\n    this.setState({sum:total+=\"8\"});\n  }\n\n  NineHandler=()=>{\n    let total=this.state.sum;\n    this.setState({sum:total+=\"9\"});\n  }\n\n  ZeroHandler=()=>{\n    let total=this.state.sum;\n    this.setState({sum:total+=\"0\"});\n  }\n\n  ClearHandler=()=>{\n    let total=this.state.sum;\n    this.setState({sum:total=\"\"});\n    ans=[]\n  }\n\n  HandlerAdd=()=>{\n      ans.push(this.state.sum)\n      ans.push(\"+\")\n    \n    let total=this.state.sum;\n    this.setState({sum:total=\"\"});\n  }\n\n  HandlerSub=()=>{\n      ans.push(this.state.sum)\n      ans.push(\"-\")\n   \n    let total=this.state.sum;\n    this.setState({sum:total=\"\"});\n  }\n\n  HandlerMul=()=>{\n      ans.push(this.state.sum)\n      ans.push(\"*\")\n    \n\n    let total=this.state.sum;\n    this.setState({sum:total=\"\"});\n  }\n\n  HandlerDiv=()=>{\n  \n      ans.push(this.state.sum)\n      ans.push(\"/\")\n    \n    let total=this.state.sum;\n    this.setState({sum:total=\"\"});\n  }\n\n  EqualHandler=()=>{\n    let total=this.state.sum;\n    ans.push(total)\n    this.setState({sum:total=eval(ans.join(''))})\n  }\n\n  render() {\n    return (\n<div id=\"calc\">\n<h1>{this.state.sum}</h1>\n        <div className=\"func\">\n    <button onClick={this.HandlerAdd}>+</button>\n    <button onClick={this.HandlerSub}>-</button>\n    <button onClick={this.HandlerMul}>*</button>\n    <button onClick={this.HandlerDiv}>/</button>\n        </div>\n\n        <div className=\"top\">\n        <button onClick={this.SevenHandler}>7</button>\n        <button onClick={this.EightHandler}>8</button>\n        <button onClick={this.NineHandler}>9</button>\n        </div>\n\n        <div className=\"middle\">\n        <button onClick={this.FourHandler}>4</button>\n        <button onClick={this.FiveHandler}>5</button>\n        <button onClick={this.SixHandler}>6</button>\n        </div>\n\n        <div className=\"bottom\">\n        <button onClick={this.OneHandler}>1</button>\n        <button onClick={this.TwoHandler}>2</button>\n        <button onClick={this.ThreeHandler}>3</button>\n        </div>\n\n        <div className=\"0\">\n        <button onClick={this.ZeroHandler}>0</button>\n        </div>\n\n        <div className=\"last\">\n        <button onClick={this.EqualHandler}>=</button>\n        <button onClick={this.ClearHandler}>Clear</button>\n        </div>\n\n\n</div>\n    )}\n}\n\nexport default App;\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}